<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Database\QueryException;
use Illuminate\Support\Facades\DB;
use Laravel\Sanctum\Contracts\HasApiTokens;
use OpenAI\Laravel\Facades\OpenAI;
date_default_timezone_set('America/La_Paz');

class AnalisisCBasicoController extends Controller
{
    function __construct()
    {
        $this->middleware('can:producto.index', ['only' => 'index']);
        $this->middleware('producto.create', ['only' => ['create', 'store']]);
        $this->middleware('producto.update', ['only' => ['edit', 'update']]);
        $this->middleware('producto.delete', ['only' => ['destroy']]);
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */

     public function index()
    {
        return view('administrador.gestionar_analisis_cbasico.index');
    }
    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */

     public function analizar1(Request $request)
     {
         /*$api_key = config('services.openai.api_key');
         OpenAI::setApiKey($api_key);
     
         $code = $request->datos;
         $solicitud = "Encuentra el camino básico para el siguiente código:\n{$code}";
     
         $response = OpenAI::completions->create([
             'engine' => 'text-davinci-002',
             'prompt' => $solicitud,
             'max_tokens' => 150,
         ]);
     
         $respuesta = $response->choices[0]->text;
         return view('administrador.gestionar_analisis_cbasico.index', compact('respuesta'));
        */}   
    
        public function analizar(Request $request)
        {
            
            $codigo = $request->codigo;
            
            $requestData = [
                "model" => "gpt-3.5-turbo-instruct",
                "prompt" => "¿Cuál es el valor de la complejidad ciclomática para el código proporcionado? " . $codigo,
                "max_tokens" => 1000,
                "temperature" => 0
            ];
            
            $requestJson = json_encode($requestData);
            
            $ch = curl_init();
            
            curl_setopt($ch, CURLOPT_URL, 'https://api.openai.com/v1/completions');
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $requestJson);  // Usar el JSON construido
            
            $headers = array();
            $headers[] = 'Content-Type: application/json';
            $headers[] = 'Authorization: Bearer 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';
            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
            
            $result = curl_exec($ch);
            if (curl_errno($ch)) {
                echo 'Error:' . curl_error($ch);
            }

            $result = json_decode($result, true);
            $generatedText = $result['choices'][0]['text'];

            return view('administrador.gestionar_analisis_cbasico.ver', compact('generatedText', 'outputPath'));
            curl_close($ch);
        }            
}
