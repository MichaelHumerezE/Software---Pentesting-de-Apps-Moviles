<?php

namespace App\Http\Controllers;

use Exception;
use Illuminate\Http\Request;
use GuzzleHttp\Client;

class AnalisisEstaticoController extends Controller
{

    public function indexApk(Request $request)
    {
        return view('administrador.analisis_estatico.subir_apk');
    }

    public function indexResultados(Request $request)
    {
        // Aumentar el tiempo de respuesta para todas las solicitudes
        set_time_limit(300);
        //
        $file = $request->file('apk');
        $fileName = $file->getClientOriginalName();

        // Mueve el archivo a la carpeta 'public/uploads'
        $file->move(public_path('uploads'), $fileName);

        // Obtiene la direcciÃ³n completa del archivo
        $filePath = public_path('uploads/' . $fileName);
        // Cree una instancia de Guzzle
        $client = new Client();

        // Realice una solicitud POST a la API REST de MobSF para subir el archivo
        $response = $client->post(
            'http://localhost:8000/api/v1/upload',
            [
                'headers' => [
                    'Authorization' => '85b655843928a5ffd05139fe296bbf522ea745df6c1b3c120164829252fa9a34',
                ],
                'multipart' => [
                    [
                        'name' => 'file',
                        'contents' => fopen($filePath, 'r'),
                    ],
                ],
            ]
        );

        // Verifique la respuesta
        if ($response->getStatusCode() !== 200) {
            throw new Exception('Error al subir el archivo');
        }

        // Obtenga el hash del archivo
        $hash = json_decode($response->getBody())->hash;

        //Inicio del escaneo
        $response = $client->post(
            'http://localhost:8000/api/v1/scan',
            [
                'headers' => [
                    'Authorization' => '85b655843928a5ffd05139fe296bbf522ea745df6c1b3c120164829252fa9a34',
                ],
                'multipart' => [
                    [
                        'name' => 'hash',
                        'contents' => $hash,
                    ],
                ],
            ]
        );
        //dd(json_decode($response->getBody()));
        $result = json_decode($response->getBody());

        //return response()->json(['result' => $result]);
        return view('administrador.analisis_estatico.resultados', ['result' => $result]);
    }

    public function showDetailsCode()
    {
        return view('administrador.analisis_estatico.detalle_codigo');
    }

    public function showDetailsCode2()
    {
        return view('administrador.analisis_estatico.detalle_codigo2');
    }

    public function getReport($hash)
    {
        // Configura el cliente Guzzle
        $client = new Client();

        try {
            // Realiza una solicitud POST para obtener el PDF del informe
            $response = $client->post(
                'http://localhost:8000/api/v1/download_pdf',
                [
                    'headers' => [
                        'Authorization' => '85b655843928a5ffd05139fe296bbf522ea745df6c1b3c120164829252fa9a34',
                        // TambiÃ©n puedes usar 'X-Mobsf-Api-Key' en lugar de 'Authorization' si es necesario
                    ],
                    'form_params' => [
                        'hash' => $hash,
                    ],
                ]
            );

            // Verifica si la solicitud fue exitosa
            if ($response->getStatusCode() === 200) {
                // Obtiene el contenido del PDF
                $pdfContent = $response->getBody();

                // Puedes devolver el PDF como una respuesta HTTP
                return response($pdfContent)
                    ->header('Content-Type', 'application/pdf');
            } else {
                // Maneja un error si la solicitud no fue exitosa
                return response('Error al obtener el informe PDF', 500);
            }
        } catch (\Exception $e) {
            // Maneja cualquier excepciÃ³n que ocurra durante la solicitud
            return response('Error al obtener el informe PDF: ' . $e->getMessage(), 500);
        }
    }
}
